% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_files.R
\name{list_files}
\alias{list_files}
\title{Wrapper around \code{base::list.files()} that adds an option to exclude directories
automatically.}
\usage{
list_files(path = ".", pattern = NULL, all.files = FALSE, full.names = TRUE,
recursive = FALSE, ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE,
incl_dirs = FALSE)
}
\arguments{
\item{path}{a character vector of full path names; the default
    corresponds to the working directory, \code{\link[base]{getwd}()}.  Tilde
    expansion (see \code{\link[base]{path.expand}}) is performed.  Missing
    values will be ignored.  Elements with a marked encoding will
    be converted to the native encoding (and if that fails, considered
    non-existent).}

\item{pattern}{an optional \link[base]{regular expression}.  Only file names
    which match the regular expression will be returned.}

\item{all.files}{a logical value.  If \code{FALSE}, only the
    names of visible files are returned (following Unix-style visibility,
    that is files whose name does not start with a dot).  If \code{TRUE},
    all file names will be returned.}

\item{full.names}{a logical value.  If \code{TRUE}, the directory
    path is prepended to the file names to give a relative file path.
    If \code{FALSE}, the file names (rather than paths) are returned.}

\item{recursive}{logical.  Should the listing recurse into directories?}

\item{ignore.case}{logical.  Should pattern-matching be case-insensitive?}

\item{include.dirs}{logical.  Should subdirectory names be included in
    recursive listings?  (They always are in non-recursive ones).}

\item{no..}{logical.  Should both \code{"."} and \code{".."} be excluded
    also from non-recursive listings?}

\item{incl_dirs}{(binary, optional) set to FALSE to remove all directories from
the search results irrespective of whether or not \code{recursive=TRUE}.}
}
\description{
\link[base]{list.files} returns all objects in the search path including directories.
\code{list_files} is a wrapper that adds an option to exclude directories. In specific,
it allows the user to override the default behavior of \code{list.files()} including
subdirectory names when \code{recursive} is set to FALSE. This is controlled by the
\code{incl_dirs} argument which filters our directories when set to TRUE.
}
\examples{
\dontrun{
#Input data
inpath <- dirname(system.file("extdata", "cdsearchr_testdata.fasta",
                              package = "seqvisr", mustWork = TRUE))
#Listing files
list_files(inpath)
}

}
\seealso{
\link[base]{list.files} for documentation regarding all other arguments.
}
